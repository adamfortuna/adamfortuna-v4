---
title: "State of Coldfusion Response"
permalink: state-of-coldfusion-response
tags: Technical, ColdFusion
---

Sitepoint posted in their newsletter in August a comment on Coldfusion, stating it was *relatively stagnant* . Ben Forta, the Senior Coldfusion Evangelist, contacted Kevin Yank, the author of that statement to gain a little more information on the reasoning. Turns out Kevin did a very nice in depth writeup on his opinions which have turned into a single place for all the Coldfusion developers to come out of the woodwork and respond to. Here's my long winded response I spent entirely too much time writing. [Original Post on Sitepoint]

Great article Kevin! Sad to see the overall opinion of the language as stagnant, but if that's the way you saw it, that's probably how many other people around the world see it as well. Many of the great points about CF have already been brought up, but I thought I'd give me $.02 as a passionate Coldfusion Developer. I agree that Coldfusion growth is stagnant. I don't mean the growth of the language, or the growth of the software created by CF, or the skill of the programmers writing it- - but as far as the number of new people coming to the language to use it I would have to agree. As your chart noted there hasn't been a growth in CF jobs, and the CF conferences aren't (to my knowledge) selling out (although I did go this past year and learned a ton). What does seem to be advancing however is the quality and power of code thats come out, even in just the past year with Unity, Reactor, Coldspring, RiaForge and many other projects and frameworks.

People are getting smarter and it's showing. MG:Unity, for instance, would be comparable to rails in many senses for it's RAD possibilities, but I doubt many people outside of the CF world know what it is. The language too is also improving, faster than the current community can use all the features. Every feature is surely being used by someone, but some features just haven't hit that viral point where everyone jumps on, like for web services in MX for instance. Flash Forms, report builder, charting - they're all amazing features that so much could be done with, but how often do you see a site using flash forms? These are those features that when you use them you think "man, this thing saved me countless hours", but most the time you don't need them in any language. Speaking of the image stuff, the [Alagad Image Component](http://www.alagad.com/) is probably the standard, although as you mentioned it'll be a feature in CF8. I think what has in the past scared people away from CF, or at least made them not give it more than a second thought in small to medium sized projects, isn't even the cost but the lack of knowledge about the product. CF just doesn't get as much press from the usual developers - it's usually just when a new version is released that it gets big word of mouth and non-CF people hear about the new stuff. I have a feeling this is because of the blog community. CF has a great blog community, which I'm recently discovering, but it does have one thing limiting it's growth- confidentiality. Most CF apps are for bigger business than a rails ap, so the bloggers can't exactly write in depth posts about their experiences.

CF's Mecca is Washington, DC, and I don't think I'd want to chance my career by blogging about what I was working on. Do a search for Coldfusion on 9rules and the only result you get is an ominous post about Coldfusion being on it's way out; it's just not getting the blogosphere crowd so we're not exactly "winning hearts and minds" of the new programmers. As your chart shows though, there are more Coldfusion than Ruby jobs available, by a factor of 4. The fact that Coldfusion doesn't get the huge community press that makes people take notice isn't that it's not happening, it's that Coldfusion is usually dismissed before they see what the fuss is about, so only the people already interested read more. I think videos like Joe Rineharts [CF Blog in 15 minutes](http://seminars.breezecentral.com/p63078746/), or Doug Hughes Presentation on [Reactor](http://my.adobe.acrobat.com/p63651304/) or anything else from [Adobe Developer Week](http://www.adobe.com/communities/developerweek/) are the kind of thing that make the "new" people deciding on a language really take notice of it and give it a fair chance. Imagine having the rails productivity on a proven, established platform? Not a bad thought, but the community would have to grow to be up for the task.

  [Original Post on Sitepoint]: http://www.sitepoint.com/blogs/2006/10/26/the-state-of-coldfusion
