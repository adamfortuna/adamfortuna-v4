---
title: "New Languages for a New Year?"
permalink: new-languages-for-a-new-year
tags: Personal, Goals, Short
---

As [some others have mentioned](http://codehappy.wordpress.com/2009/01/02/2009s-hot-new-programming-language/) , it's that time of year where most people with blogs make their public announcements on what languages they'll be concentrating on for the upcoming year. Last year I think my top focus was Ruby on Rails and Javascript; so safe to say I've gotten a little experience in those. Things have taken a bit of a turn though, and I'm going to switch things up for 2009 and concentrate a little on my weaknesses and a little on new growth.

Weaknesses? Yeah, everyone has them. Those areas where when you have to implement something you bite your lip and find a way to get through it - usually with a 10ft poll. If they're something that ties into your daily routine in some way, this is kind of task that can be holding you back from potentially getting more work done, or higher quality work. One of my weaknesses has always been testing. Maybe I've been surrounded by too many testers, but its definitely something I could improve on. I wouldn't consider myself fully proficient in a language to the point where I'd feel confident teaching someone else until I was proficient testing in it.

Some languages don't make this easy of course. Testing Javascript isn't the most common thing, but it's important, especially with such a Javascript heavy application as [CloudShout](http://www.cloudshout.com) . There are some great new tools like [FireUnit](http://fireunit.org/) for testing in Javascript too. Testing in Python, especially within [Django](http://www.djangoproject.com/) has to have great support — as long as you actually do it. With Rails there's a million different ways to test; but I'd like to concentrate mostly on mocks and stubs for a swiftly running test suite. No point in having a test suite that takes so long to run that no one has the time to run it after all.

There are a few other *topics of interest* for the new year. Things I'd love to look into and play around with at least a least a little. [XMPP](http://xmpp.org/) and especially [bosh](http://xmpp.org/extensions/xep-0124.html) look extreme interesting to me, and I look forward to cramming together the little I've learned so far into an [Adogo](http://adogo.us) presentation in a little over a week. [Collective intelligence](http://www.amazon.com/Programming-Collective-Intelligence-Building-Applications/dp/0596529325/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1230955957&amp;sr=8-1) looks like another interesting topic that I've always wanted to dig a little deeper into. The [Netflix prize](http://www.netflixprize.com/) looks an great way to experiment a little with it in some different language — Python, C and Erlang seem to be the most commonly used for it. There's at least one active Rails plugin for collective intelligence, [acts\_as\_recommendable](http://github.com/maccman/acts_as_recommendable/tree/master) , that uses a C implementation for the heavy lifting and might be worth checking out as well.

Last year [git](http://git.or.cz/) took over in a lot of the programming world thanks to an amazing killer app, [Github](https://github.com/) . Getting familiar with git isn't a big thing, but it's worth it to have a little more shared language with your peers. Moving from CVS to Subversion wasn't something that most people did overnight, but after the switch I don't know a single person who wanted to go back. Git is shaping up to be same, but has a long road of public support and client side tools ahead of it before it makes it that far. People that like git, [really really like git](http://whygitisbetterthanx.com/) . I'm ashamed to say I've made improvements to a few projects I've cloned from Github, but never got around to branching and committing my changes (or writing tests for my changes of course). This is something I'd love to get better at — more for fun and familiarity with git than anything else. That's the goal for this year — work on projects that are fun!
