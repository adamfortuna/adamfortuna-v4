---
layout: post
title: "ColdFusion never made it... then it \"died\""
id: coldfusion-never-made-it-then-it-died
published: false
---

Lists seem to draw the most attention. Much more attention than things like _research_ and _ journalism_ . These _reporters_ can get away from their criticism for the well known reason that any press is good press. I don't think "Corfield's":http://corfield.org/blog/ ever common quote "If you're not annoying somebody, you're not really alive." is true in this case. The post I'm referring to of course is the recently Dugg "Ghosts in the Machine: 12 Coding Languages That Never Took Off":http://digg.com/programming/Ghosts_in_the_Machine_12_Coding_Languages_That_Never_Took_Off (link to Digg, they're not getting the hits) which lists 12 languages they claim have, obviously, never made it big. The ColdFusion community struck back in force on the Digg post which had me wondering. Are they wrong? Did it "take off" compared to other technologies in the market? Well, "Indeed.com":http://www.indeed.com to the rescue!

" !http://posterous.com/getfile/files.posterous.com/import-verf/rqyDcDzuBpGJDHsmtEtepwuIejozJACydcioDhJqCaHzdFetchzloxJkJcIH/media_httpwwwadamfort_ucEvj.png.scaled500.png! ":http://posterous.com/getfile/files.posterous.com/import-verf/rqyDcDzuBpGJDHsmtEtepwuIejozJACydcioDhJqCaHzdFetchzloxJkJcIH/media_httpwwwadamfort_ucEvj.png.scaled1000.png

Odd, it seems as though 3 of the 12 languages have a decent amount of jobs currently. The other 9 are admittedly on the low side with .001> of all jobs using these. What's funny to me is that not only is ColdFusion the most popular on the list, but ColdFusion spelled _ wrong_ is more popular than the others. The number of ColdFusion, Delphi and Powerbuilder jobs have slightly declined in the past two years, which in all cases could be only the beginning of an eventual fall from "grace", but these are still interesting numbers. Where do these three compare with other scripting languages?

" !http://posterous.com/getfile/files.posterous.com/import-verf/zuofEtgfBJAwcfaofyEzHrabuonpDjuJefikhtrEsppkItkDckDAlkarvggI/media_httpwwwadamfort_skykm.png.scaled500.png! ":http://posterous.com/getfile/files.posterous.com/import-verf/zuofEtgfBJAwcfaofyEzHrabuonpDjuJefikhtrEsppkItkDckDAlkarvggI/media_httpwwwadamfort_skykm.png.scaled1000.png

Here's some other contenders, albeit in a slightly different realm. Python, Ruby and Ruby on Rails are outshine ColdFusion on the "Tiobe":http://www.tiobe.com/tpci.htm index, but when you combine the two spellings of ColdFusion it has the largest number of jobs of the bunch (or very close). What does this mean? It means the article is wrong, and not well researched; unless they make the claim the others never took off that is- - especially since Ruby came out the same time as ColdFusion, and Python even before that. This doesn't deny the fact though that Ruby and Python are growing rapidly while CF is not. While we can blame poor marketing by Adobe, the high price or sensational reporting like this for the lack of growth, the real reason could just be that the others are a better fit for more places. With more smaller companies getting into the web now than ever before, and initial startup cost being such a prohibitive part, things outside a LAMP stack are a luxury better spent elsewhere. But that's the obvious reason - what if more people coming out of college with java backgrounds just click more with tagless languages? These reasons are enough to get many people to steer away I'd think. I might be getting a little off track. Whatever language you choose, good for you; they all do the same thing. Just get something done and call it a day. :)